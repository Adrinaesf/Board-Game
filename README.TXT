
PROJECT TITLE: UBG-Halfgammon
PURPOSE OF PROJECT: Mastering the Inheritance!!
VERSION or DATE: Sunday, feb 11, 2024
HOW TO START THIS PROJECT: Please use the main class and press start
AUTHORS: Adrina E(12A)

* Instructions: 
    Welcome to Halfgammon, a game inspired by Backgammon. 
    In this game you choose what color you want to be. 2 Dices will roll to see who can go first. The player that has the greater number of dice 
    will go first. Now the game will start. Dices wil roll, the player has to decide which dice he/she want to move. 
    If the player is red, they move in the right direction and if they are pink, they move to left direction.  
* The rule of the game: 
    For example, if it's red turn, and red want to move 3 step forward, but there is a pink robot blocking it, red robot will get a message that
    "You choose the worng player", and can't play there turn anymore. 
* How to win?   
    For winning, players have to bring all their pieces to their "home". 
    For red, it's home is from avenue 19 to 24
    For pink, it's home is from avenue 0 to 5
The person who can put all of his/her pieces to it's home earlier will win the game. 

---------------------------------------------------------------------------------------------------
* Inheritance, Overriding and Overloading: 
*   I used inheritance mainly in my BetterRobotClass. This class is the extended version of MyRobot class
*   I added the feature of getting a number of dice and move my robots according to the number of dice. 
*   In addition it gives me the winner,and it changes the color of the pieces. 
*   Another one is MyRobot class which is extended from RobotSE class
*   This class not only has all the abilities of RobotSE, but also I added an important method which is:
*   The method to give me the moveable robots. 
*   for overriding and overloading I have: 
*   the move methods, and I also tried to do the overriding for my IsRobotAtInterssection and NextPlayerMove, and I tried so hard to make it but because it
*   return boolean, it was harder than the others ones that return nothing and it is void, like move method, pivkThing and more. 
*   I mainly used Inheritance and the use of methods in differnt classes, and a little of overriding and overloading, which helped me a lot. I didn't need to make
*   lots of for loops for the moves of my pieces according to the number of the dice. I just passed the value of dice to move method. 
*   Overall I think this programmed was really hard for me, but on the other hand I feel like I gained so much experience in coding through this programm.


